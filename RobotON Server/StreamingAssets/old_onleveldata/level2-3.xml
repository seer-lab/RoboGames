<level>
<next-level>level3-1.xml</next-level>
<description>The Ol' Switcheroo</description>
<introtext>Switches are another way to make decisions.
Just follow the control flow through the program!</introtext>
<endtext>Great work!
You've mastered the art of control flow!</endtext>
<timelimit>unlimited</timelimit>
<tools>
<tool name="controlflow" enabled="true" count="unlimited"/>
<tool name="activator" enabled="true" count="unlimited"/>
</tools>
<code language="c++">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;
using namespace std;
int main {
	int fingers = 3;
	//Instead of using lots of else-ifs, you can use a switch
	//the 'case' chosen is the one that matches the switch parameter
	switch(fingers){
<beacon flow-order="" />		case 1: cout &lt;&lt; "One finger is raised"; break;
<beacon flow-order="" />		case 2: cout &lt;&lt; "Two fingers are raised"; break;
<beacon flow-order="0" />		case 3: cout &lt;&lt; "Three fingers are raised"; break;
<beacon flow-order="" />		case 4: cout &lt;&lt; "Four fingers are raised"; break;
<beacon flow-order="" />		case default: cout &lt;&lt; "Not a valid number of fingers"; break;
	}
	//You can have If statements inside each other.
	//Can you choose the right values to reach the return statement?
	//Read through the code before you decide what the values should be.
	<comment type="code" correct="false" size="1" groupid="1">int var1 = 1;</comment>
	<comment type="code" correct="false" size="1" groupid="1">int var1 = 2;</comment>
	<comment type="code" correct="true" size="1" groupid="1">int var1 = 3;</comment>
	<comment type="code" correct="true" size="1" groupid="2">int var2 = 10;</comment>
	<comment type="code" correct="false" size="1" groupid="2">int var2 = 20;</comment>
	<comment type="code" correct="false" size="1" groupid="2">int var2 = 30;</comment>
	if ((var1+var2)/2 &lt; 10){
<beacon flow-order="1" />		if (var1 / 2 == 1){
<beacon flow-order="2" />			int var3 = 1;
		}
	}
	else{
<beacon flow-order="" />		int var3 = 0;
	}
	switch(var1){
<beacon flow-order="" />		case 1: bool var4 = true; break;
<beacon flow-order="" />		case 2: bool var4 = false; break;
<beacon flow-order="3" />		case 3: bool var4 = true; break;
	}
	if (!(var3 == 1){
<beacon flow-order="" />		throw "The program fails!";
	}
	else if (var4){
<beacon flow-order="4" />		return 0;
	}
	else{
<beacon flow-order="" />		throw "The program fails!";
	}
}
</code>
</level>
