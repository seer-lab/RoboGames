<level>
<next-level>level3-1.xml</next-level>
<description>The Ol' Switcheroo</description>
<introtext>Switches are another way to make decisions.
Just follow the control flow through the program!</introtext>
<endtext>Great work!
You've mastered the art of control flow!</endtext>
<timelimit>unlimited</timelimit>
<tools>
<tool name="uncommenter" enabled="true" count="unlimited"/>
<tool name="controlflow" enabled="true" count="unlimited"/>
</tools>
<code language="c++">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;
using namespace std;
int main {
	int var1, var2, var3;
	bool var4;
	
	//Can you choose the right values that AVOID the failures?
	//Double check the code before you decide what the values should be.
	
	<comment type="code" correct="false"  groupid="1">//var1 = 1;</comment>
	<comment type="code" correct="false"  groupid="1">//var1 = 2;</comment>
	<comment type="code" correct="true"  groupid="1">//var1 = 3;</comment>
	
	<comment type="code" correct="true"  groupid="2">//var2 = 10;</comment>
	<comment type="code" correct="false"  groupid="2">//var2 = 20;</comment>
	<comment type="code" correct="false"  groupid="2">//var2 = 30;</comment>	
	
	if ((var1+var2)/2 &lt; 10){
<beacon flow-order="0" />		if (var1 / 2 == 1){
<beacon flow-order="1" />			var3 = 1;
		}
	}
	else{
<beacon flow-order="" />		var3 = 0;
	}
	switch(var1){
<beacon flow-order="" />		case 1: var4 = false; break;
<beacon flow-order="" />		case 2: var4 = false; break;
<beacon flow-order="2" />		case 3: var4 = true; break;
	}
	if (!(var3 == 1){
<beacon flow-order="" />		throw "The program fails!";
	}
	else if (var4){
<beacon flow-order="3" />		return 0;
	}
	else{
<beacon flow-order="" />		throw "The program fails!";
	}
}
</code>
</level>
